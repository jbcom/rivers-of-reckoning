name: Web Deployment

on:
  push:
    branches: [ "main" ]
  release:
    types: [published]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-web:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyxel
    - name: Create web export script
      run: |
        mkdir -p web_export
        cat > web_export/export_web.py << 'EOF'
        #!/usr/bin/env python3
        """
        Web export script for First Python RPG
        """
        import sys
        import os
        import shutil
        
        # Add src to path
        sys.path.insert(0, '../src')
        
        try:
            # Create a simplified version for web export
            from first_python_rpg.game import Game
            from first_python_rpg.cli import main
            
            # Create main entry point for web
            with open('main.py', 'w') as f:
                f.write('''#!/usr/bin/env python3
        """
        First Python RPG - Web Version
        """
        import sys
        import os
        sys.path.insert(0, 'src')
        
        from first_python_rpg.cli import main
        
        if __name__ == "__main__":
            main()
        ''')
            
            # Copy source files
            if os.path.exists('src'):
                shutil.rmtree('src')
            shutil.copytree('../src', 'src')
            
            print("‚úì Web export preparation completed")
            print("‚úì Source files copied to web_export directory")
            
        except Exception as e:
            print(f"‚úó Web export failed: {e}")
            sys.exit(1)
        EOF
        
        cd web_export
        python export_web.py
    - name: Create web demo page
      run: |
        cd web_export
        cat > index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>First Python RPG - Web Demo</title>
            <style>
                body { 
                    font-family: Arial, sans-serif; 
                    text-align: center; 
                    background: #222; 
                    color: white; 
                    padding: 20px; 
                }
                .container { 
                    max-width: 800px; 
                    margin: 0 auto; 
                }
                .game-info { 
                    margin: 20px 0; 
                    padding: 20px; 
                    background: #333; 
                    border-radius: 10px; 
                }
                .note { 
                    background: #444; 
                    padding: 15px; 
                    margin: 10px 0; 
                    border-radius: 5px; 
                }
                a { color: #4af; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üéÆ First Python RPG - Web Demo</h1>
                <div class="game-info">
                    <h2>About This Game</h2>
                    <p>A retro-style RPG built with Python and Pyxel, featuring procedural generation and modern game mechanics.</p>
                    
                    <h3>‚ú® Features</h3>
                    <ul style="text-align: left; max-width: 400px; margin: 0 auto;">
                        <li>Procedural sprite generation (no more ASCII!)</li>
                        <li>Dynamic weather system</li>
                        <li>Procedural quest generation</li>
                        <li>Particle effects system</li>
                        <li>Boss battles with unique mechanics</li>
                        <li>Cross-platform compatibility</li>
                    </ul>
                    
                    <h3>üéÆ Controls</h3>
                    <ul style="text-align: left; max-width: 300px; margin: 0 auto;">
                        <li>Arrow Keys: Move player</li>
                        <li>SPACE: Select/Confirm</li>
                        <li>ENTER: Start game</li>
                        <li>ESC: Pause/Resume</li>
                        <li>Q: Quit to menu</li>
                    </ul>
                </div>
                
                <div class="note">
                    <h3>üåê Web Version Note</h3>
                    <p>This web version is automatically generated from the latest code. 
                    The game runs natively in browsers using Pyxel's web export capabilities.</p>
                    <p>For the best experience, try the desktop version: 
                    <a href="https://github.com/jbcom/first-python-rpg">View on GitHub</a></p>
                </div>
                
                <div class="note">
                    <h3>üõ†Ô∏è Technical Details</h3>
                    <p>Built with Python 3.13 and Pyxel 2.4+</p>
                    <p>Features procedural sprite generation replacing ASCII art</p>
                    <p>Uses modern game architecture with clean separation of concerns</p>
                </div>
            </div>
        </body>
        </html>
        EOF
    - name: Setup Pages
      uses: actions/configure-pages@v4
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './web_export'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4